{"version":3,"sources":["context/appContext.js","context/appProvider.js","Components/Button.js","Components/PlayPauseComponent.js","Components/ResetComponent.js","Components/CountDown.js","Libs/lib.js","Components/Setting.js","Pages/Main.js","App.js","reportWebVitals.js","index.js"],"names":["appContext","createContext","Provider","children","useState","workTime","setWorkTime","relaxTime","setRelaxTime","hideSetting","setHideSetting","Paused","setPaused","mode","setMode","TimeLeft","contextValue","setTimeLeft","PausedRef","useRef","TimeLeftRef","modeRef","value","Button","title","className","onClick","PlayPauseComponent","useContext","current","ResetComponent","CountDown","useEffect","timeDealer","setInterval","TimeRef","setter","timeWork","timeRelax","setterTime","timeRef","newMode","newTimerMode","WorkBreak","clearInterval","graph","total","Math","round","graphy","segundos","minutos","floor","clock","text","styles","buildStyles","textColor","pathColor","tailColor","Setting","ReactSlider","thumbClassName","trackClassName","onChange","e","min","max","Main","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.59ca3b4c.chunk.js","sourcesContent":["/* eslint-disable */\nimport { createContext } from 'react';\n\nconst appContext = createContext();\n\nexport default appContext;\n","/* eslint-disable */\nimport React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport appContext from './appContext';\n\nfunction Provider({ children }) {\n  const [workTime, setWorkTime] = useState(25)\n  const [relaxTime, setRelaxTime ] = useState(5)\n  const [hideSetting, setHideSetting] = useState(false)\n  const [Paused, setPaused] = useState(true);\n  const [mode, setMode] = useState('work')\n  const [TimeLeft, setTimeLeft] = useState(0);\n  const PausedRef = useRef(Paused);\n  const TimeLeftRef = useRef(TimeLeft);\n  const modeRef = useRef(mode);\n\n  const contextValue = {\n   workTime,\n   relaxTime,\n   setWorkTime,\n   setRelaxTime,\n   hideSetting,\n   setHideSetting,\n   Paused,\n   setPaused,\n   mode, \n   setMode,\n   TimeLeft,\n   setTimeLeft,\n   PausedRef,\n   TimeLeftRef,\n   modeRef\n  };\n\n  return (\n    <appContext.Provider value={ contextValue }>\n      {children}\n    </appContext.Provider>\n  );\n}\n\nexport default Provider;\n\nProvider.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Button({ title, className, onClick }) {\n  return (\n    <div>\n      <button\n      className={className}\n      onClick={onClick}\n      >{title}\n      </button>\n    </div>\n  );\n}\n\nexport default Button;\n\nButton.propTypes = {\n  title: PropTypes.string.isRequired,\n  className: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};","import React, { useContext } from 'react';\nimport appContext from '../context/appContext';\nimport Button from '../Components/Button'\n\nexport default function PlayPauseComponent() {\n    const { Paused, setPaused, PausedRef } = useContext(appContext);\n  return (\n    <div>\n      <div className='buttons-container'>\n        {Paused\n          ? <Button \n          title='Começar'\n          className='BtnStart'\n          onClick={() => { setPaused(false); PausedRef.current = false; }} />\n          : <Button \n          className='BtnPause'\n            title='Parar'\n          onClick={() => { setPaused(true); PausedRef.current = true; }} />}\n      </div>\n    </div>\n  );\n}\n","import React, { useContext } from 'react';\nimport Button from '../Components/Button'\nimport appContext from '../context/appContext';\n\nexport default function ResetComponent() {\n    const { modeRef, TimeLeftRef } = useContext(appContext);\n  return (\n    <div>\n        { \n      modeRef.current === 'work' ?\n      <Button\n        title='Zerar'\n        className='Zerar'\n        onClick={ () => TimeLeftRef.current = 25 * 60 } />\n      :\n      <Button\n        title='Zerar Descanco'\n        className='Zerar'\n        onClick={ () => TimeLeftRef.current = 5 * 60 } />\n      } \n    </div>\n  );\n}\n\n","import { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport { tick, WorkBreak, graphy, clock } from '../Libs/lib'\nimport 'react-circular-progressbar/dist/styles.css';\nimport Button from '../Components/Button'\nimport PlayPauseComponent from '../Components/PlayPauseComponent'\nimport ResetComponent from './ResetComponent';\nimport {useContext, useEffect} from \"react\";\nimport appContext from '../context/appContext';\nimport '../Styles/CountDown.css'\n\nfunction CountDown() {\n  const {\n  workTime,\n  relaxTime,\n  setHideSetting, \n  mode, \n  setMode,\n  TimeLeft,\n  setTimeLeft,\n  PausedRef,\n  TimeLeftRef,\n  modeRef\n  } = useContext(appContext);\n\n\n  useEffect(() => {\n    TimeLeftRef.current = workTime * 60;\n    setTimeLeft(TimeLeftRef.current);\n\n    const timeDealer = setInterval(() => {\n      if (PausedRef.current) {\n        return;\n      }\n      if (TimeLeftRef.current === 0) {\n        return WorkBreak(modeRef, workTime, relaxTime, setMode, setTimeLeft, TimeLeftRef);\n      }\n      tick( TimeLeftRef, setTimeLeft);\n    },1000);\n\n    return () => clearInterval(timeDealer);\n  }, [workTime]);\n   \n  const graph = graphy(mode, workTime, relaxTime, TimeLeft)\n  const { minutos, segundos } = clock(TimeLeft)\n\n  \n  return (\n    <div className='countDown'>\n      <CircularProgressbar\n        value={ graph }\n        text={ minutos + ':' + segundos }\n        styles={buildStyles({\n        textColor:'black',\n        pathColor:mode === 'work' ? 'red' : '#00d35f',\n        tailColor:'black',\n      })} />\n      <div className='buttons-container'>\n        <PlayPauseComponent />\n      </div>\n      <div className='buttons-container'> \n        <Button\n        title='Configurações'\n        className='Config'\n        onClick={ () => setHideSetting(true) } />\n      </div>\n      <div className='buttons-container'>\n        <ResetComponent />\n      </div>\n      </div>\n  );\n}\n\nexport default CountDown;\n\n","export const tick = (TimeRef, setter) => {\n  TimeRef.current--;\n  setter(TimeRef.current);\n}\n\nexport const WorkBreak = (modeRef, timeWork, timeRelax, setMode, setterTime, timeRef) => {\n  const newMode = modeRef.current === 'work' ? 'break' : 'work';\n  const newTimerMode = (newMode === 'work' ? timeWork : timeRelax) * 60;\n\n  setMode(newMode);\n  modeRef.current = newMode;\n\n  setterTime(newTimerMode);\n  timeRef.current = newTimerMode;\n}\n\nexport const graphy = (mode, workTime, relaxTime, TimeLeft) => {\n  const total = mode === 'work'\n  ? workTime * 60\n  : relaxTime * 60;\nconst graph = Math.round(TimeLeft / total * 100);\nreturn graph\n}\n\nexport const clock = (TimeLeft) => {\n  const minutos = Math.floor(TimeLeft / 60);\n  let segundos = TimeLeft % 60;\n      if(segundos < 10) segundos = '0'+segundos;\nreturn {minutos, segundos}\n}","import React, { useContext } from 'react';\nimport ReactSlider from 'react-slider'\nimport appContext from '../context/appContext';\nimport '../Styles/Setting.css'\nimport Button from './Button';\n\nexport default function Setting() {\n\n  const { workTime, relaxTime, setWorkTime, setRelaxTime, setHideSetting } = useContext(appContext)\n\n  return (\n    <div className='sliders-container'>\n      <label className='label-work'> Trabalhar : { workTime } minutos </label>\n        <ReactSlider \n        className='minute-slider'\n        thumbClassName='thumb'\n        trackClassName='track'\n        value={ workTime }\n        onChange={(e) => setWorkTime(e)}\n        min={1}\n        max={60}\n        />\n\n      <label className='label-work'> Descançar : { relaxTime } minutos </label>\n        <ReactSlider \n        className='break-slider'\n        thumbClassName='thumb'\n        trackClassName='track'\n        value={ relaxTime }\n        onChange={(e) => setRelaxTime(e)}\n        min={1}\n        max={60}\n        />\n        <Button \n        title='Voltar'\n        onClick={() => setHideSetting(false)}\n        className='SettingButton'\n        />\n    </div>\n  );\n}\n\n","import React, { useContext } from 'react';\nimport CountDown from '../Components/CountDown';\nimport Setting from '../Components/Setting';\nimport appContext from '../context/appContext';\n\nfunction Main() {\n  const { hideSetting } = useContext(appContext)\n\n  return (\n    <div>\n      { !hideSetting ?\n      <CountDown /> :\n      <Setting />\n      }\n      </div>\n  );\n}\n\nexport default Main;\n","import React from 'react';\nimport './App.css';\nimport Provider from './context/appProvider';\nimport Main from './Pages/Main';\nfunction App() {\n  return (\n   <div>\n     <Provider>\n     <Main /> \n     </Provider>\n   </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}